---
# ansible-playbook --ask-vault-pass --ask-become-pass -vvv --extra-vars '{ key_name: "MySSHKeyName" }' playbooks/setup.manjaro/main.yml

- name: Update all packages
  hosts: dev_machine
  connection: local
  become: true
  tasks:
    - shell:
        cmd: 'pacman -Syu --noconfirm'

- name: Install default programs
  hosts: dev_machine
  connection: local
  become: true
  vars_files:
    - "{{ playbook_dir }}/config.yml"
  roles:
    - role: GROG.package

- name: Install Python packages
  hosts: dev_machine
  connection: local
  become: true
  vars_files:
    - "{{ playbook_dir }}/config.yml"
  tasks:
    - pip:
        state: present
        name: '{{ item }}'
      with_items: '{{ pip_packages }}'

- name: Generate SSH Key
  hosts: dev_machine
  connection: local
  vars_files:
    - "{{ playbook_dir }}/config.yml"
  become: false
  roles:
    - role: setup.ssh-key
    - role: add.ssh-key.github
      vars:
        ssh_pub_key_path: "{{ lookup('env', 'HOME') }}/.ssh/{{ ssh_key_filename }}.pub"
        github_access_token: "{{ github_ssh_token }}"

- name: Install Rust
  hosts: dev_machine
  connection: local
  become: true
  roles:
    - role: install.rust
      vars:
        channel: stable

- name: Install Paru
  hosts: dev_machine
  connection: local
  roles:
    - role: install.paru

- name: Install NodeJS
  hosts: dev_machine
  connection: local
  become: true
  roles:
    - role: install.nodejs

- name: Install GoLang
  hosts: dev_machine
  connection: local
  vars_files:
    - "{{ playbook_dir }}/config.yml"
  become: true
  roles:
    - role: install.go
      vars:
        go_packages: '{{ golang_packages }}'

- name: Install Neovim
  hosts: dev_machine
  connection: local
  become: true
  roles:
    - role: install.neovim

- name: Install VSCode
  hosts: dev_machine
  connection: local
  become: ansible_facts['os_family'] == "Ubuntu"
  roles:
    - role: install.vscode

- name: Install Docker
  hosts: dev_machine
  connection: local
  become: true
  roles:
    - role: install.docker
      vars:
        user: '{{ ansible_env.USER }}'

- name: Install Postman
  hosts: dev_machine
  connection: local
  become: false
  roles:
    - role: install.postman
