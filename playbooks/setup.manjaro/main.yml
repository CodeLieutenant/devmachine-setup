---
# ansible-playbook --ask-vault-pass --ask-become-pass -vvv --extra-vars '{ key_name: "MySSHKeyName" }' playbooks/setup.manjaro/main.yml

# - name: Reduce swappiness
#   hosts: dev_machine
#   connection: local
#   become: true
#   vars_files:
#     - "{{ playbook_dir }}/config.yml"
#   roles:
#     - role: reduce.swappiness

# - name: Get fastest mirrors
#   hosts: dev_machine
#   connection: local
#   become: true
#   tasks:
#     - shell:
#         cmd: 'pacman-mirrors --fasttrack'

# - name: Enable TRIM
#   hosts: dev_machine
#   connection: local
#   become: true
#   tasks:
#     - systemd:
#       vars:
#         name: fstrim.timer
#         state: started
#         enabled: yes

# - name: Config Files
#   hosts: dev_machine
#   connection: local
#   become: false
#   vars_files:
#     - "{{ playbook_dir }}/config.yml"
#   roles:
#     - role: install.config-files

# - name: Update all packages
#   hosts: dev_machine
#   connection: local
#   become: true
#   roles:
#     - role: update.packages
#       vars:
#         system: 'arch'

# Problem with IPTables
# - name: Setup Firewall
#   hosts: dev_machine
#   connection: local
#   become: true
#   roles:
#     - role: install.ufw

# - name: Install default programs
#   hosts: dev_machine
#   connection: local
#   become: true
#   vars_files:
#     - "{{ playbook_dir }}/config.yml"
#   roles:
#     - role: GROG.package

# - name: Install Python packages
#   hosts: dev_machine
#   connection: local
#   become: true
#   vars_files:
#     - "{{ playbook_dir }}/config.yml"
#   tasks:
#     - pip:
#         state: present
#         name: '{{ item }}'
#       with_items: '{{ pip_packages }}'

# - name: Generate SSH Key
#   hosts: dev_machine
#   connection: local
#   vars_files:
#     - "{{ playbook_dir }}/config.yml"
#   become: no
#   roles:
#     - role: setup.ssh-key
#     - role: add.ssh-key.github
#       vars:
#         ssh_pub_key_path: "{{ lookup('env', 'HOME') }}/.ssh/{{ ssh_key_filename }}.pub"
#         github_access_token: "{{ github_ssh_token }}"

- name: Install Rust
  hosts: dev_machine
  connection: local
  become: true
  roles:
    - role: install.rust
      vars:
        channel: stable

- name: Install Paru
  hosts: dev_machine
  connection: local
  roles:
    - role: install.paru

- name: Install AUR packages
  hosts: dev_machine
  connection: local
  become: false
  vars_files:
    - "{{ playbook_dir }}/config.yml"
  roles:
    - role: install.aur-package
      vars:
        pacakges: '{{ aur_packages }}'

- name: Install NodeJS
  hosts: dev_machine
  connection: local
  become: true
  roles:
    - role: install.nodejs

- name: Install GoLang
  hosts: dev_machine
  connection: local
  become: true
  vars_files:
    - "{{ playbook_dir }}/config.yml"
  roles:
    - role: install.go

- name: Install Neovim
  hosts: dev_machine
  connection: local
  become: true
  roles:
    - role: install.neovim

- name: Install VSCode
  hosts: dev_machine
  connection: local
  roles:
    - role: install.vscode

- name: Install Docker
  hosts: dev_machine
  connection: local
  become: true
  roles:
    - role: install.docker
      vars:
        user: '{{ ansible_env.USER }}'

- name: Install Postman
  hosts: dev_machine
  connection: local
  become: false
  roles:
    - role: install.postman

- name: Install Hosts Edit
  hosts: dev_machine
  connection: local
  become: false
  roles:
    - role: install.hosts-edit

- name: Install Hosts Edit
  hosts: dev_machine
  connection: local
  become: false
  roles:
    - role: install.rust-analyzer-downloader

- name: Install Jetbrains Toolbox
  hosts: dev_machine
  connection: local
  become: true
  roles:
    - role: install.jetbrains-toolbox

