---

- name: Add Docker GPG apt Key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
  when: ansible_facts['os_family'] == "Ubuntu"

- name: Install required system packages
  apt:
    pkg:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
      - python3-pip
      - virtualenv
      - python3-setuptools
    state: latest
    update_cache: true
  when: ansible_facts['os_family'] == "Ubuntu"

- name: Add Docker Repository
  apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu focal stable
    state: present
  when: ansible_facts['os_family'] == "Ubuntu"

- name: Install docker {{ ansible_facts['os_family'] }}
  GROG.package:
    vars:
      package_list:
        - name: docker
          pacman: docker
          apt: docker-ce
        - name: cli
          pacman_ignore: yes
          apt: docker-ce-cli
        - name: containerd
          pacman_ignore: yes
          apt: containerd.io

- name: Install python docker module
  pip:
    state: latest
    name:
      - docker
      - docker-compose

- name: adding existing user '{{ user }}' to Docker group
  user:
    name: "{{ user }}"
    groups: docker
    append: yes

- name: Ensure docker daemon is running
  service:
    name: docker
    state: started
    enabled: true

- name: Check for a reboot - Debian and Ubuntu
  register: reboot_required_file
  stat: path=/var/run/reboot-required get_md5=no
  when: ansible_facts['os_family'] == "Ubuntu"
